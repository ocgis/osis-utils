AC_INIT(src/lines.c)

dnl For automake
PACKAGE=osis-utils
VERSION=0.0

dnl Initialize automake macros
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Make a header based on the things we will find out
AM_CONFIG_HEADER(config.h)

dnl Check for programs
AC_ARG_PROGRAM
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

dnl Check for libraries
AC_CHECK_LIB(mint,main)

if test x$with_ogemlibis = xyes ; then
  AC_MSG_ERROR([
*** Directory must be specified for --with-ogemlibis])
fi

if test x$with_ogemlibis = x ; then 
  # Look for separately installed ogemlibis

  AM_PATH_OGEMLIBIS(0.0.0,,
    AC_MSG_ERROR([
*** ogemlibis 0.0.0 or better is required. The latest version of ogemlibis
*** is always available from ftp://ftp.nocrew.org.]),
    libfb)

  ogemlibis_cflags=$OGEMLIBIS_CFLAGS
  ogemlibis_libs=$OGEMLIBIS_LIBS
else
  # Use uninstalled ogemlibis (assume they got the version right)

  if test -x $with_ogemlibis/ogemlibis-config ; then 
    :
  else
    AC_MSG_ERROR([ogemlibis directory ($with_ogemlibis) not present or not configured])
  fi

  # For use in ogemlibis-config
  ogemlibis_cflags=`$with_ogemlibis/ogemlibis-config --cflags`
  ogemlibis_libs=`$with_ogemlibis/ogemlibis-config --libs`

  ogemlibis_release=`$with_ogemlibis/ogemlibis-config --version | sed 's%\\.[[0-9]]*$%%'`

  # canonicalize relative paths
  case $with_ogemlibis in 
    /*)
      ogemlibis_dir=$with_ogemlibis
      ;;
    *)
      ogemlibis_dir="\$(top_builddir)/$with_ogemlibis"
      ;;
  esac

  OGEMLIBIS_CFLAGS="-I$ogemlibis_dir"
  OGEMLIBIS_LIBS=$ogemlibis_dir/libfb.la

  AC_SUBST(OGEMLIBIS_CFLAGS)
  AC_SUBST(OGEMLIBIS_LIBS)
fi

AC_SUBST(ogemlibis_cflags)
AC_SUBST(ogemlibis_libs)

dnl Set target specific things
case "${target}" in
    *mint*)    DEFS="$DEFS -DMINT_TARGET" ;;

dnl Assume that MiNTwrapper includes are in /usr/local/include/tos
dnl and that gemlib includes are in /usr/local/include/gem. This
dnl has to be changed so that all include root directories are
dnl searched for <root>/tos and <root>/gem
dnl    *)    CPPFLAGS="$CPPFLAGS -I/usr/local/include/tos -I/usr/local/include/gem" ;;
       *)    CPPFLAGS="$CPPFLAGS -I/usr/local/include/tos" ;;
esac

dnl Specify which variables that should be exchanged
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Set CFLAGS
CFLAGS="$CFLAGS -Wall"

dnl Specify which files that should be created
AC_OUTPUT(Makefile src/Makefile)
