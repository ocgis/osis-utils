AC_INIT(src/lines.c)

dnl For automake
PACKAGE=osis-utils
VERSION=0.0

dnl Initialize automake macros
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Make a header based on the things we will find out
AM_CONFIG_HEADER(config.h)

dnl Check for programs
AC_ARG_PROGRAM
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

if test x$with_ovdisis = xyes ; then
  AC_MSG_ERROR([
*** Directory must be specified for --with-ovdisis])
fi

if test x$with_ovdisis = x ; then 
  # Look for separately installed ovdisis

  AM_PATH_OVDISIS(0.0.1,,
    AC_MSG_ERROR([
*** ovdisis 0.0.1 or better is required. The latest version of ovdisis
*** is always available from ftp://ftp.nocrew.org.]),
    libovdisis)

  ovdisis_cflags=$OVDISIS_CFLAGS
  ovdisis_libs=$OVDISIS_LIBS
else
  # Use uninstalled ovdisis (assume they got the version right)

  if test -x $with_ovdisis/ovdisis-config ; then 
    :
  else
    AC_MSG_ERROR([ovdisis directory ($with_ovdisis) not present or not configured])
  fi

  # For use in ovdisis-config
  ovdisis_cflags=`$with_ovdisis/ovdisis-config --cflags`
  ovdisis_libs=`$with_ovdisis/ovdisis-config --libs`

  ovdisis_release=`$with_ovdisis/ovdisis-config --version | sed 's%\\.[[0-9]]*$%%'`

  # canonicalize relative paths
  case $with_ovdisis in 
    /*)
      ovdisis_dir=$with_ovdisis
      ;;
    *)
      ovdisis_dir="\$(top_builddir)/$with_ovdisis"
      ;;
  esac

  OVDISIS_CFLAGS="-I$ovdisis_dir"
  OVDISIS_LIBS=$ovdisis_dir/libfb.la

  AC_SUBST(OVDISIS_CFLAGS)
  AC_SUBST(OVDISIS_LIBS)
fi

CPPFLAGS="$CPPFLAGS $OVDISIS_CFLAGS"

if test x$with_oaesis = xyes ; then
  AC_MSG_ERROR([
*** Directory must be specified for --with-oaesis])
fi

if test x$with_oaesis = x ; then 
  # Look for separately installed oaesis

  AM_PATH_OAESIS(0.90,,
    AC_MSG_ERROR([
*** oaesis 0.0.0 or better is required. The latest version of oaesis
*** is always available from ftp://ftp.nocrew.org.]),
    libfb)

  oaesis_cflags=$OAESIS_CFLAGS
  oaesis_libs=$OAESIS_LIBS
else
  # Use uninstalled oaesis (assume they got the version right)

  if test -x $with_oaesis/oaesis-config ; then 
    :
  else
    AC_MSG_ERROR([oaesis directory ($with_oaesis) not present or not configured])
  fi

  # For use in oaesis-config
  oaesis_cflags=`$with_oaesis/oaesis-config --cflags`
  oaesis_libs=`$with_oaesis/oaesis-config --libs`

  oaesis_release=`$with_oaesis/oaesis-config --version | sed 's%\\.[[0-9]]*$%%'`

  # canonicalize relative paths
  case $with_oaesis in 
    /*)
      oaesis_dir=$with_oaesis
      ;;
    *)
      oaesis_dir="\$(top_builddir)/$with_oaesis"
      ;;
  esac

  OAESIS_CFLAGS="-I$oaesis_dir"
  OAESIS_LIBS=$oaesis_dir/liboaesis.la

  AC_SUBST(OAESIS_CFLAGS)
  AC_SUBST(OAESIS_LIBS)
fi

CPPFLAGS="$CPPFLAGS $OAESIS_CFLAGS"

if test x$with_mintwrappers = xyes ; then
  AC_MSG_ERROR([
*** Directory must be specified for --with-mintwrappers])
fi

if test x$with_mintwrappers = x ; then 
  # Look for separately installed mintwrappers

  AM_PATH_MINTWRAPPERS(0.0.0,,
    AC_MSG_ERROR([
*** mintwrappers 0.0.0 or better is required. The latest version of mintwrappers
*** is always available from ftp://ftp.nocrew.org.]),
    libmintwrappers)

  mintwrappers_cflags=$MINTWRAPPERS_CFLAGS
  mintwrappers_libs=$MINTWRAPPERS_LIBS
else
  # Use uninstalled mintwrappers (assume they got the version right)

  if test -x $with_mintwrappers/mintwrappers-config ; then 
    :
  else
    AC_MSG_ERROR([mintwrappers directory ($with_mintwrappers) not present or not configured])
  fi

  # For use in mintwrappers-config
  mintwrappers_cflags=`$with_mintwrappers/mintwrappers-config --cflags`
  mintwrappers_libs=`$with_mintwrappers/mintwrappers-config --libs`

  mintwrappers_release=`$with_mintwrappers/mintwrappers-config --version | sed 's%\\.[[0-9]]*$%%'`

  # canonicalize relative paths
  case $with_mintwrappers in 
    /*)
      mintwrappers_dir=$with_mintwrappers
      ;;
    *)
      mintwrappers_dir="\$(top_builddir)/$with_mintwrappers"
      ;;
  esac

  MINTWRAPPERS_CFLAGS="-I$mintwrappers_dir"
  MINTWRAPPERS_LIBS=$mintwrappers_dir/libmintwrappers.la

  AC_SUBST(MINTWRAPPERS_CFLAGS)
  AC_SUBST(MINTWRAPPERS_LIBS)
fi

CPPFLAGS="$CPPFLAGS $MINTWRAPPERS_CFLAGS"

dnl Set target specific things
case "${target}" in
    *mint*)    DEFS="$DEFS -DMINT_TARGET" ;;

dnl Assume that MiNTwrapper includes are in /usr/local/include/tos
dnl and that gemlib includes are in /usr/local/include/gem. This
dnl has to be changed so that all include root directories are
dnl searched for <root>/tos and <root>/gem
dnl    *)    CPPFLAGS="$CPPFLAGS -I/usr/local/include/tos -I/usr/local/include/gem" ;;
       *)    CPPFLAGS="$CPPFLAGS -I/usr/local/include/tos" ;;
esac

dnl Specify which variables that should be exchanged
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Set CFLAGS
CFLAGS="$CFLAGS -Wall"

dnl Specify which files that should be created
AC_OUTPUT(Makefile src/Makefile)
